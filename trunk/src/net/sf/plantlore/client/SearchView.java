/*
 * AddEdit2.java
 *
 * Created on 23. b≈ôezen 2006, 23:16
 */

package net.sf.plantlore.client;

import java.awt.Dimension;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.table.TableColumn;
import net.sf.plantlore.common.AutoComboBox;
import net.sf.plantlore.common.AutoComboBoxNG3;
import net.sf.plantlore.common.AutoTextArea;
import net.sf.plantlore.common.Pair;
import net.sf.plantlore.common.TabTransfersFocus;
import net.sf.plantlore.l10n.L10n;
import org.apache.log4j.Logger;

/**
 *
 * @author  reimei
 */
public class SearchView extends javax.swing.JDialog implements Observer {
    private Logger logger = Logger.getLogger(this.getClass().getPackage().getName());
    private static final int DIALOG_WIDTH = 930;
    private boolean visible=false;
    private Search model;
    protected AuthorTableModelSearch tableModel;
    
    /** Creates new form AddEdit2 */
    public SearchView(java.awt.Frame parent, boolean modal, Search model) {
        super(parent, modal);
        this.model = model;
        model.addObserver(this);
        setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        initComponents();
        
        getRootPane().setDefaultButton(okButton);
        
        setLabels();
        
        jPanel3.setVisible(visible);
        jPanel2.setPreferredSize(new Dimension(DIALOG_WIDTH,210));
        jPanel8.setPreferredSize(new Dimension(DIALOG_WIDTH,50));
        this.pack();        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        convertCoordinatesGroup = new javax.swing.ButtonGroup();
        timeButtonGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        townLabel = new javax.swing.JLabel();
        //items = new Object[] {"Praha", "Brno", "Turnov", "Trebic"};
        townComboBox = new AutoComboBoxNG3(true);
        taxonLabel = new javax.swing.JLabel();
        placeDescriptionLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();

        taxonTextArea = new AutoTextArea(this);
        extendedButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        authorTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        fromDateChooser = new com.toedter.calendar.JDateChooser();
        toDateChooser = new com.toedter.calendar.JDateChooser();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        monthLabel = new javax.swing.JLabel();
        intervalRadioButton = new javax.swing.JRadioButton();
        monthRadioButton = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        quadrantLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        territoryLabel = new javax.swing.JLabel();
        phytNameLabel = new javax.swing.JLabel();
        phytCodeLabel = new javax.swing.JLabel();
        territoryNameCombo = new AutoComboBoxNG3(true);
        phytNameCombo = new AutoComboBoxNG3(true);
        phytCodeCombo = new AutoComboBoxNG3(true);
        phytCountryCombo = new AutoComboBoxNG3(false);
        quadrantTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        publicationLabel = new javax.swing.JLabel();
        herbariumLabel = new javax.swing.JLabel();
        projectLabel = new javax.swing.JLabel();
        herbariumTextField = new javax.swing.JTextField();
        sourceLabel = new javax.swing.JLabel();
        sourceCombo = new AutoComboBoxNG3(false);
        publicationCombo = new AutoComboBoxNG3(true);
        projectCombo = new AutoComboBoxNG3(true);
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        locationNoteArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        altitudeLabel = new javax.swing.JLabel();
        latitudeLabel = new javax.swing.JLabel();
        longitudeLabel = new javax.swing.JLabel();
        WGS84Button = new javax.swing.JRadioButton();
        S42Button = new javax.swing.JRadioButton();
        SJTSKButton = new javax.swing.JRadioButton();
        altitudeTextField = new javax.swing.JTextField();
        latitudeTextField = new javax.swing.JTextField();
        longitudeTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        occurrenceNoteArea = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.BasicData"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 200));
        townLabel.setText("Nearest bigger seat:");

        townComboBox.setActionCommand("townComboBox");
        townComboBox.insertItemAt(model.EMPTY_PAIR,0);

        taxonLabel.setText("Taxon:");

        placeDescriptionLabel.setText("Place description:");

        descriptionArea.setColumns(20);
        descriptionArea.setRows(5);
        descriptionArea.setLineWrap(true);
        descriptionArea.setWrapStyleWord(true);
        new TabTransfersFocus(descriptionArea);
        jScrollPane2.setViewportView(descriptionArea);

        taxonTextArea.setColumns(20);
        taxonTextArea.setRows(5);
        taxonTextArea.setAutoscrolls(false);
        jScrollPane3.setViewportView(taxonTextArea);

        extendedButton.setText("Extended");
        extendedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extendedButtonActionPerformed(evt);
            }
        });
        extendedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                extendedButtonMouseClicked(evt);
            }
        });

        authorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(authorTable);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(taxonLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                .add(85, 85, 85)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(townLabel)
                    .add(placeDescriptionLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, townComboBox, 0, 300, Short.MAX_VALUE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .add(extendedButton))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(townLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(townComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(19, 19, 19)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(placeDescriptionLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(extendedButton))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(14, 14, 14)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .add(taxonLabel))))
                .addContainerGap())
        );
        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.ExtendedData"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 395));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 415));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.TimePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        fromDateChooser.setLocale(L10n.getCurrentLocale());

        toDateChooser.setLocale(L10n.getCurrentLocale());

        fromLabel.setText("From:");

        toLabel.setText("To:");

        ((JComboBox)monthChooser.getComboBox()).addItem("");
        monthChooser.setLocale(L10n.getCurrentLocale());

        monthLabel.setText("Month:");

        timeButtonGroup.add(intervalRadioButton);
        intervalRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        intervalRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        intervalRadioButton.setActionCommand("INTERVAL");

        timeButtonGroup.add(monthRadioButton);
        monthRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        monthRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        monthRadioButton.setActionCommand("MONTH");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(monthRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(monthLabel))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(intervalRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fromLabel)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(fromDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(35, 35, 35)
                        .add(toLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(toDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(monthChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(781, 781, 781))))
        );

        jPanel4Layout.linkSize(new java.awt.Component[] {fromDateChooser, toDateChooser}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(toDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(toLabel)
                    .add(intervalRadioButton)
                    .add(fromLabel)
                    .add(fromDateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(monthRadioButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(monthChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(monthLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.LocationPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        quadrantLabel.setText("Quadrant:");

        countryLabel.setText("Country:");

        territoryLabel.setText("Territory name:");

        phytNameLabel.setText("Phytochoria name:");

        phytCodeLabel.setText("Phytochoria code:");

        territoryNameCombo.setActionCommand("territoryNameCombo");
        territoryNameCombo.insertItemAt(model.EMPTY_PAIR,0);

        phytNameCombo.setActionCommand("phytNameCombo");
        phytNameCombo.insertItemAt(model.EMPTY_PAIR,0);

        phytCodeCombo.setActionCommand("phytCodeCombo");
        phytCodeCombo.insertItemAt(model.EMPTY_PAIR,0);

        phytCountryCombo.setActionCommand("phytCountryCombo");
        phytCountryCombo.insertItemAt(model.EMPTY_STRING,0);

        quadrantTextField.setActionCommand("quadrantTextField");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(countryLabel)
                            .add(phytNameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(phytCountryCombo, 0, 173, Short.MAX_VALUE)
                            .add(phytNameCombo, 0, 173, Short.MAX_VALUE)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(territoryLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(territoryNameCombo, 0, 173, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, quadrantLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, phytCodeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(quadrantTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(phytCodeCombo, 0, 90, Short.MAX_VALUE)))
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {phytCodeCombo, quadrantTextField}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(territoryLabel)
                    .add(territoryNameCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(phytNameLabel)
                        .add(phytNameCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(phytCodeLabel)
                        .add(phytCodeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(countryLabel)
                    .add(phytCountryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(quadrantLabel)
                    .add(quadrantTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.OtherPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        publicationLabel.setText("Publication:");

        herbariumLabel.setText("Herbarium:");

        projectLabel.setText("Project:");

        herbariumTextField.setActionCommand("herbariumTextField");

        sourceLabel.setText("Source:");

        sourceCombo.setActionCommand("sourceCombo");
        sourceCombo.insertItemAt(model.EMPTY_STRING,0);

        publicationCombo.setActionCommand("publicationCombo");
        publicationCombo.insertItemAt(model.EMPTY_PAIR,0);

        projectCombo.setActionCommand("projectCombo");
        projectCombo.insertItemAt(model.EMPTY_PAIR,0);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(projectLabel)
                    .add(herbariumLabel)
                    .add(publicationLabel)
                    .add(sourceLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(projectCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(publicationCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(herbariumTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .add(sourceCombo, 0, 171, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sourceLabel)
                    .add(sourceCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(publicationLabel)
                    .add(publicationCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(herbariumLabel)
                    .add(herbariumTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(projectLabel)
                    .add(projectCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.LocationNotePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        locationNoteArea.setColumns(20);
        locationNoteArea.setRows(5);
        locationNoteArea.setLineWrap(true);
        locationNoteArea.setWrapStyleWord(true);
        new TabTransfersFocus(locationNoteArea);
        jScrollPane4.setViewportView(locationNoteArea);

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane4)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.GPSPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        altitudeLabel.setText("Altitude:");

        latitudeLabel.setText("Latitude:");

        longitudeLabel.setText("Longitude:");

        convertCoordinatesGroup.add(WGS84Button);
        WGS84Button.setText("WGS84");
        WGS84Button.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        WGS84Button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        WGS84Button.setNextFocusableComponent(S42Button);
        WGS84Button.setActionCommand("WGS84");
        WGS84Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WGS84ButtonActionPerformed(evt);
            }
        });

        convertCoordinatesGroup.add(S42Button);
        S42Button.setText("S-42");
        S42Button.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        S42Button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        S42Button.setNextFocusableComponent(SJTSKButton);
        S42Button.setActionCommand("S42");

        convertCoordinatesGroup.add(SJTSKButton);
        SJTSKButton.setText("S-JTSK");
        SJTSKButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        SJTSKButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SJTSKButton.setNextFocusableComponent(sourceCombo);
        SJTSKButton.setActionCommand("SJTSK");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(12, 12, 12)
                            .add(latitudeLabel))
                        .add(longitudeLabel))
                    .add(altitudeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(latitudeTextField)
                            .add(altitudeTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(longitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(S42Button)
                    .add(WGS84Button)
                    .add(SJTSKButton))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(WGS84Button)
                    .add(altitudeLabel)
                    .add(altitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(6, 6, 6)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(S42Button)
                    .add(latitudeLabel)
                    .add(latitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(SJTSKButton)
                    .add(longitudeLabel)
                    .add(longitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.OccurrenceNotePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        occurrenceNoteArea.setColumns(20);
        occurrenceNoteArea.setRows(5);
        occurrenceNoteArea.setLineWrap(true);
        occurrenceNoteArea.setWrapStyleWord(true);
        new TabTransfersFocus(occurrenceNoteArea);
        jScrollPane5.setViewportView(occurrenceNoteArea);

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane5)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(0, 0, 0)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(358, 358, 358))
        );
        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        cancelButton.setText("Cancel");

        okButton.setText("Ok");

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(helpButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 598, Short.MAX_VALUE)
                .add(okButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancelButton)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.VERTICAL);

        getContentPane().add(jPanel8, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_helpButtonActionPerformed

    private void extendedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extendedButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_extendedButtonActionPerformed

    private void WGS84ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WGS84ButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_WGS84ButtonActionPerformed

    private void extendedButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extendedButtonMouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_extendedButtonMouseClicked
    
    
    //musn't delete contents of tableModel, because it's also called to update the table's user interface unfortunately...
    protected void initAuthorTable() {
        if (tableModel == null) 
            tableModel = new AuthorTableModelSearch(model);
        authorTable.setModel(tableModel);

        //authorTable.setDefaultEditor(JButton.class, new ButtonEditor());
        //authorTable.setDefaultRenderer(JButton.class, new ButtonEditor());

        TableColumn tc1 = authorTable.getColumnModel().getColumn(0);
        TableColumn tc2 = authorTable.getColumnModel().getColumn(1);
        TableColumn tc3 = authorTable.getColumnModel().getColumn(2);
        TableColumn tc4 = authorTable.getColumnModel().getColumn(3);

        JComboBox cb;
        if (model.getAuthors() == null) 
            cb = new AutoComboBoxNG3();
        else
            cb = new AutoComboBoxNG3(model.getAuthors());
        
        tc1.setCellEditor(new DefaultCellEditor(cb));  

        if (model.getAuthorRoles() == null) 
            cb = new AutoComboBoxNG3();
        else
            cb = new AutoComboBoxNG3(model.getAuthorRoles());
        tc2.setCellEditor(new DefaultCellEditor(cb));
        
        ButtonEditorSearch be = new ButtonEditorSearch(model);
        tc3.setCellEditor(be);
        tc3.setCellRenderer(be);
        
        AuthorRevisionEditorSearch are = new AuthorRevisionEditorSearch(model);
        tc4.setCellEditor(are);
    }
    
    private void resetAuthorModel() {
        if (tableModel != null)
            tableModel.reset();
    }
        
    public void clearComponentData() {
        model.clearAuthors(); resetAuthorModel(); initAuthorTable();
        townComboBox.setSelectedIndex(0);
        taxonTextArea.setText("");
        descriptionArea.setText("");
        
        locationNoteArea.setText("");
        occurrenceNoteArea.setText("");
        territoryNameCombo.setSelectedIndex(0);
        phytNameCombo.setSelectedIndex(0);
        phytCodeCombo.setSelectedIndex(0);
        phytCountryCombo.setSelectedIndex(0);
        quadrantTextField.setText("");
        
        altitudeTextField.setText("");
        longitudeTextField.setText("");
        latitudeTextField.setText("");
        sourceCombo.setSelectedIndex(0);
        publicationCombo.setSelectedIndex(0);
        projectCombo.setSelectedIndex(0);
        herbariumTextField.setText("");
        ((JComboBox)monthChooser.getComboBox()).setSelectedIndex(12);
        
        intervalRadioButton.setSelected(true);        
        monthLabel.setEnabled(false);
        monthChooser.setEnabled(false);
    }
    
    public void switchExtended() {
        visible = !visible;
        jPanel3.setVisible(visible);
        jPanel2.setPreferredSize(new Dimension(DIALOG_WIDTH,190));
        jPanel8.setPreferredSize(new Dimension(DIALOG_WIDTH,50));
        this.pack();        
    }

    private void setLabels() {
        townLabel.setText(L10n.getString("AddEdit.TownLabel"));
        placeDescriptionLabel.setText(L10n.getString("AddEdit.PlaceDescriptionLabel"));
        taxonLabel.setText(L10n.getString("AddEdit.TaxonLabel"));
        
        territoryLabel.setText(L10n.getString("AddEdit.TerritoryNameLabel"));
        phytNameLabel.setText(L10n.getString("AddEdit.PhytNameLabel"));
        phytCodeLabel.setText(L10n.getString("AddEdit.PhytCodeLabel"));
        quadrantLabel.setText(L10n.getString("AddEdit.QuadrantLabel"));
        countryLabel.setText(L10n.getString("AddEdit.CountryLabel"));
        
        altitudeLabel.setText(L10n.getString("AddEdit.AltitudeLabel"));
        latitudeLabel.setText(L10n.getString("AddEdit.LatitudeLabel"));
        longitudeLabel.setText(L10n.getString("AddEdit.LongitudeLabel"));
        
        sourceLabel.setText(L10n.getString("AddEdit.SourceLabel"));
        publicationLabel.setText(L10n.getString("AddEdit.PublicationLabel"));
        herbariumLabel.setText(L10n.getString("AddEdit.HerbariumLabel"));
        projectLabel.setText(L10n.getString("AddEdit.ProjectLabel"));
        
        monthLabel.setText(L10n.getString("AddEdit.MonthLabel"));
        fromLabel.setText(L10n.getString("Search.FromLabel"));
        toLabel.setText(L10n.getString("Search.ToLabel"));
        
        helpButton.setText(L10n.getString("Common.Help"));
        helpButton.setMnemonic(L10n.getMnemonic("Common.Help"));
        okButton.setText(L10n.getString("Common.Ok"));
        okButton.setMnemonic(L10n.getMnemonic("Common.Ok"));
        cancelButton.setText(L10n.getString("Common.Cancel"));
        cancelButton.setMnemonic(L10n.getMnemonic("Common.Cancel"));
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEditView(new javax.swing.JFrame(), true, null, false).setVisible(true);
            }
        });
    }

    public void update(Observable o, Object arg) {
        if (arg != null && arg instanceof Pair) {
            String s = ((Pair<String,Integer>)arg).getFirst();
            int row = ((Pair<String,Integer>)arg).getSecond(); 
            if (s.equals("updateCode"))
                phytCodeCombo.setSelectedItem(model.getPhytCode());
            if (s.equals("updateName"))
                phytNameCombo.setSelectedItem(model.getPhytName());
            if (s.equals("addAuthorRow")) {
                tableModel.addRow();
                /*
                DefaultCellEditor dce = (DefaultCellEditor) authorTable.getCellEditor(0,0);
                Object o = dce.getCellEditorValue();
                 */            
            }             
            if (s.equals("removeAuthorRow")) {
                tableModel.removeRow(row);
                //unfortunately have to set up the editors and renderers again because of the
                //fireTableStructureChanged() in the tableModel.removeRow() ... :-/
                //initAuthorTable();            
            }            
        }//instanceof Pair
        
        if (arg != null && arg instanceof String) {
            String s = (String) arg;
            
            if (s.equals("CLEAR"))
                clearComponentData();
            
            if (s.equals("PLANTS_CHANGED")) {
                logger.debug("Updating plant area");
                if (model.getPlants() == null) {
                    ((AutoTextArea)taxonTextArea).setChoices(new String[] {""});
                    return;
                }
                Pair<String, Integer>[] plants = model.getPlants();
                String[] choices = new String[plants.length];
                for (int i = 0; i < plants.length; i++) 
                    choices[i] = plants[i].getFirst();
                
                ((AutoTextArea)taxonTextArea).setChoices(choices);
            }
            
            if (s.equals("AUTHORS_CHANGED")) {
                logger.debug("Updating authors combo");
                JComboBox cb;
                
                if (model.getAuthors() == null) 
                    cb = new AutoComboBoxNG3();
                else
                    cb = new AutoComboBoxNG3(model.getAuthors());
                    
                TableColumn tc1 = authorTable.getColumnModel().getColumn(0);

                
                tc1.setCellEditor(new DefaultCellEditor(cb));  
            }

            if (s.equals("AUTHORROLES_CHANGED")) {
                logger.debug("Updating authorroles combobox");
                JComboBox cb;
                
                if (model.getAuthorRoles() == null)
                    cb = new AutoComboBoxNG3();
                else
                    cb = new AutoComboBoxNG3(model.getAuthorRoles());

                TableColumn tc2 = authorTable.getColumnModel().getColumn(1);
                
                tc2.setCellEditor(new DefaultCellEditor(cb));                
            }
            
            if (s.equals("VILLAGES_CHANGED")) {
                logger.debug("Updating villages combobox");
                if (model.getVillages() == null)
                    townComboBox.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    townComboBox.setModel(new DefaultComboBoxModel(model.getVillages()));
                townComboBox.insertItemAt(model.EMPTY_PAIR,0);
            }
            
            if (s.equals("TERRITORIES_CHANGED")) {
                logger.debug("Updating territories combobox");
                if (model.getTerritories() == null)
                    territoryNameCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    territoryNameCombo.setModel(new DefaultComboBoxModel(model.getTerritories()));
                territoryNameCombo.insertItemAt(model.EMPTY_PAIR,0);
            }

            if (s.equals("PHYTNAMES_CHANGED")) {
                logger.debug("Updating phytnames combobox");
                if (model.getPhytNames() == null)
                    phytNameCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    phytNameCombo.setModel(new DefaultComboBoxModel(model.getPhytNames()));
                phytNameCombo.insertItemAt(model.EMPTY_PAIR,0);
            }

            if (s.equals("PHYTCODES_CHANGED")) {
                logger.debug("Updating phytcodes combobox");
                if (model.getPhytCodes() == null)
                    phytCodeCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    phytCodeCombo.setModel(new DefaultComboBoxModel(model.getPhytCodes()));
                phytCodeCombo.insertItemAt(model.EMPTY_PAIR,0);
            }

            if (s.equals("COUNTRIES_CHANGED")) {
                logger.debug("Updating countries combobox");
                if (model.getCountries() == null)
                    phytCountryCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    phytCountryCombo.setModel(new DefaultComboBoxModel(model.getCountries()));
                phytCountryCombo.insertItemAt(model.EMPTY_STRING,0);
            }
            
            if (s.equals("SOURCES_CHANGED")) {
                logger.debug("Updating sources combobox");
                if (model.getSources() == null)
                    sourceCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    sourceCombo.setModel(new DefaultComboBoxModel(model.getSources()));
                sourceCombo.insertItemAt(model.EMPTY_STRING,0);
            }
            
            if (s.equals("PUBLICATIONS_CHANGED")) {
                logger.debug("Updating publications combobox");
                if (model.getPublications() == null)
                    publicationCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    publicationCombo.setModel(new DefaultComboBoxModel(model.getPublications()));
                publicationCombo.insertItemAt(model.EMPTY_PAIR,0);
            }

            if (s.equals("PROJECTS_CHANGED")) {
                logger.debug("Updating projects combobox");
                if (model.getProjects() == null)
                    projectCombo.setModel(new DefaultComboBoxModel(new String[] {""}));
                else
                    projectCombo.setModel(new DefaultComboBoxModel(model.getProjects()));
                projectCombo.insertItemAt(model.EMPTY_PAIR,0);
            }                       
        }//instanceof String
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JRadioButton S42Button;
    protected javax.swing.JRadioButton SJTSKButton;
    protected javax.swing.JRadioButton WGS84Button;
    protected javax.swing.JLabel altitudeLabel;
    protected javax.swing.JTextField altitudeTextField;
    protected javax.swing.JTable authorTable;
    protected javax.swing.JButton cancelButton;
    private javax.swing.ButtonGroup convertCoordinatesGroup;
    protected javax.swing.JLabel countryLabel;
    protected javax.swing.JTextArea descriptionArea;
    protected javax.swing.JToggleButton extendedButton;
    protected com.toedter.calendar.JDateChooser fromDateChooser;
    protected javax.swing.JLabel fromLabel;
    protected javax.swing.JButton helpButton;
    protected javax.swing.JLabel herbariumLabel;
    protected javax.swing.JTextField herbariumTextField;
    protected javax.swing.JRadioButton intervalRadioButton;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    protected javax.swing.JPanel jPanel4;
    protected javax.swing.JPanel jPanel5;
    protected javax.swing.JPanel jPanel6;
    protected javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    protected javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    protected javax.swing.JLabel latitudeLabel;
    protected javax.swing.JTextField latitudeTextField;
    protected javax.swing.JTextArea locationNoteArea;
    protected javax.swing.JLabel longitudeLabel;
    protected javax.swing.JTextField longitudeTextField;
    protected com.toedter.calendar.JMonthChooser monthChooser;
    protected javax.swing.JLabel monthLabel;
    protected javax.swing.JRadioButton monthRadioButton;
    protected javax.swing.JTextArea occurrenceNoteArea;
    protected javax.swing.JButton okButton;
    protected javax.swing.JComboBox phytCodeCombo;
    protected javax.swing.JLabel phytCodeLabel;
    protected javax.swing.JComboBox phytCountryCombo;
    protected javax.swing.JComboBox phytNameCombo;
    protected javax.swing.JLabel phytNameLabel;
    protected javax.swing.JLabel placeDescriptionLabel;
    protected javax.swing.JComboBox projectCombo;
    protected javax.swing.JLabel projectLabel;
    protected javax.swing.JComboBox publicationCombo;
    protected javax.swing.JLabel publicationLabel;
    protected javax.swing.JLabel quadrantLabel;
    protected javax.swing.JTextField quadrantTextField;
    protected javax.swing.JComboBox sourceCombo;
    protected javax.swing.JLabel sourceLabel;
    protected javax.swing.JLabel taxonLabel;
    protected javax.swing.JTextArea taxonTextArea;
    protected javax.swing.JLabel territoryLabel;
    protected javax.swing.JComboBox territoryNameCombo;
    private javax.swing.ButtonGroup timeButtonGroup;
    protected com.toedter.calendar.JDateChooser toDateChooser;
    protected javax.swing.JLabel toLabel;
    protected javax.swing.JComboBox townComboBox;
    protected javax.swing.JLabel townLabel;
    // End of variables declaration//GEN-END:variables
    
}
