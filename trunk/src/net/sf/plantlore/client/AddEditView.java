/*
 * AddEdit2.java
 *
 * Created on 23. b≈ôezen 2006, 23:16
 */

package net.sf.plantlore.client;

import java.awt.Dimension;
import java.awt.event.FocusListener;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JPanel;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumn;
import net.sf.plantlore.common.AutoComboBoxNG3;
import net.sf.plantlore.common.AutoTextArea;
import net.sf.plantlore.common.Pair;
import net.sf.plantlore.common.TabTransfersFocus;
import net.sf.plantlore.common.record.AuthorOccurrence;
import net.sf.plantlore.l10n.L10n;
import org.apache.log4j.Logger;

/**
 *
 * @author  reimei
 */
public class AddEditView extends javax.swing.JDialog implements Observer {
    private Logger logger;
    private static final int DIALOG_WIDTH = 890;
    private static final String REQUIRED_STRING  = "(*)";
    private boolean visible=false;
    private AddEdit model;
    private boolean inEditMode = false;
    private boolean inAddMode = true;
    protected AuthorTableModel tableModel;
    
    /** Creates new form AddEdit2 */
    public AddEditView(java.awt.Frame parent, boolean modal, AddEdit model, boolean edit) {
        super(parent, modal);
        logger = Logger.getLogger(this.getClass().getPackage().getName());                

        this.model = model;
        model.addObserver(this);
        this.inEditMode = edit;
        this.inAddMode = ! edit;
        setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        initComponents();
        
        setLabels();
        
        if (inEditMode)
            loadComponentData();
        
        jPanel3.setVisible(visible);
        jPanel2.setPreferredSize(new Dimension(DIALOG_WIDTH,190));
        jPanel8.setPreferredSize(new Dimension(DIALOG_WIDTH,50));
        this.pack();        
    }
    
           
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        convertCoordinatesGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        townLabel = new javax.swing.JLabel();
        //items = new Object[] {"Praha", "Brno", "Turnov", "Trebic"};
        townComboBox = new AutoComboBoxNG3(model.getVillages(), true);
        taxonLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        placeDescriptionLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Pair<String, Integer>[] plants = model.getPlants();
        String[] choices = new String[plants.length];
        for (int i = 0; i < plants.length; i++)
        choices[i] = plants[i].getFirst();

        taxonTextArea = new AutoTextArea(choices, this);
        extendedButton = new javax.swing.JToggleButton();
        checklistButton = new javax.swing.JButton();
        yearSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        authorTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        monthLabel = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        dayChooser = new com.toedter.calendar.JDayChooser();
        timeLabel = new javax.swing.JLabel();
        timeTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        quadrantLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        territoryNameLabel = new javax.swing.JLabel();
        phytNameLabel = new javax.swing.JLabel();
        phytCodeLabel = new javax.swing.JLabel();
        territoryNameCombo = new AutoComboBoxNG3(model.getTerritories(), true);
        phytNameCombo = new AutoComboBoxNG3(model.getPhytNames(), true);
        phytCodeCombo = new AutoComboBoxNG3(model.getPhytCodes(), true);
        phytCountryCombo = new AutoComboBoxNG3(model.getCountries(), false);
        quadrantTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        publicationLabel = new javax.swing.JLabel();
        herbariumLabel = new javax.swing.JLabel();
        projectLabel = new javax.swing.JLabel();
        herbariumTextField = new javax.swing.JTextField();
        sourceLabel = new javax.swing.JLabel();
        sourceCombo = new AutoComboBoxNG3(model.getSources(), false);
        publicationCombo = new AutoComboBoxNG3(model.getPublications(), true);
        projectCombo = new AutoComboBoxNG3(model.getProjects(), true);
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        locationNoteArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        altitudeLabel = new javax.swing.JLabel();
        latitudeLabel = new javax.swing.JLabel();
        longitudeLabel = new javax.swing.JLabel();
        WGS84Button = new javax.swing.JRadioButton();
        S42Button = new javax.swing.JRadioButton();
        SJTSKButton = new javax.swing.JRadioButton();
        altitudeTextField = new javax.swing.JTextField();
        latitudeTextField = new javax.swing.JTextField();
        longitudeTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        occurrenceNoteArea = new javax.swing.JTextArea();
        requiredInfoLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.BasicData"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 200));
        townLabel.setText("Nearest bigger seat:");

        townComboBox.setActionCommand("townComboBox");

        taxonLabel.setText("Taxon:");

        yearLabel.setText("Year:");

        placeDescriptionLabel.setText("Place description:");

        descriptionArea.setColumns(20);
        descriptionArea.setRows(5);
        descriptionArea.setLineWrap(true);
        new TabTransfersFocus(descriptionArea);
        jScrollPane2.setViewportView(descriptionArea);

        taxonTextArea.setColumns(20);
        taxonTextArea.setRows(5);
        taxonTextArea.setAutoscrolls(false);
        jScrollPane3.setViewportView(taxonTextArea);

        extendedButton.setText("Extended");
        extendedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extendedButtonActionPerformed(evt);
            }
        });
        extendedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                extendedButtonMouseClicked(evt);
            }
        });

        checklistButton.setText("Checklist");

        yearSpinner.setValue(2006);
        ((SpinnerNumberModel)yearSpinner.getModel()).setMinimum(1);

        authorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(authorTable);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(taxonLabel)
                    .add(yearLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(yearSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 164, Short.MAX_VALUE)
                        .add(checklistButton))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .add(85, 85, 85)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(townLabel)
                    .add(placeDescriptionLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(townComboBox, 0, 216, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(extendedButton)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(townComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(townLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(placeDescriptionLabel)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(taxonLabel)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(yearSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(yearLabel))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(checklistButton)
                                .add(extendedButton)))))
                .add(183, 183, 183))
        );
        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.ExtendedData"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 490));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 490));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.TimePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        monthLabel.setText("Month:");

        dayLabel.setText("Day:");

        monthChooser.setNextFocusableComponent(dayChooser);
        ((JComboBox)monthChooser.getComboBox()).addItem("");
        monthChooser.setLocale(L10n.getCurrentLocale());

        dayChooser.setNextFocusableComponent(okButton);
        dayChooser.setLocale(L10n.getCurrentLocale());

        timeLabel.setText("Time:");

        timeTextField.setNextFocusableComponent(okButton);

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(monthLabel)
                    .add(timeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(timeTextField)
                    .add(monthChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dayLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dayChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(monthLabel)
                            .add(monthChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(timeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(timeLabel)))
                    .add(dayLabel)
                    .add(dayChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.LocationPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        quadrantLabel.setText("Quadrant:");

        countryLabel.setText("Country:");

        territoryNameLabel.setText("Territory name:");

        phytNameLabel.setText("Phytochoria name:");

        phytCodeLabel.setText("Phytochoria code:");

        territoryNameCombo.setActionCommand("territoryNameCombo");

        phytNameCombo.setActionCommand("phytNameCombo");

        phytCodeCombo.setActionCommand("phytCodeCombo");

        phytCountryCombo.setActionCommand("phytCountryCombo");
        phytCountryCombo.insertItemAt(model.EMPTY_STRING,0);

        quadrantTextField.setActionCommand("quadrantTextField");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(countryLabel)
                            .add(phytNameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(phytCountryCombo, 0, 206, Short.MAX_VALUE)
                            .add(phytNameCombo, 0, 206, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                        .add(territoryNameLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(territoryNameCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 206, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, quadrantLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, phytCodeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(quadrantTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(phytCodeCombo, 0, 90, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {phytCountryCombo, phytNameCombo, territoryNameCombo}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.linkSize(new java.awt.Component[] {phytCodeCombo, quadrantTextField}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(territoryNameCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(territoryNameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(phytNameCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(phytNameLabel))
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(phytCodeLabel)
                        .add(phytCodeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(phytCountryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(quadrantLabel)
                    .add(quadrantTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(countryLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.OtherPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        publicationLabel.setText("Publication:");

        herbariumLabel.setText("Herbarium:");

        projectLabel.setText("Project:");

        herbariumTextField.setActionCommand("herbariumTextField");

        sourceLabel.setText("Source:");

        sourceCombo.setActionCommand("sourceCombo");
        sourceCombo.insertItemAt(model.EMPTY_STRING,0);

        publicationCombo.setActionCommand("publicationCombo");
        publicationCombo.insertItemAt(model.EMPTY_PAIR,0);

        projectCombo.setActionCommand("projectCombo");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(projectLabel)
                    .add(herbariumLabel)
                    .add(publicationLabel)
                    .add(sourceLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(projectCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(publicationCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(herbariumTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .add(sourceCombo, 0, 171, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sourceLabel)
                    .add(sourceCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(publicationLabel)
                    .add(publicationCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(herbariumLabel)
                    .add(herbariumTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(projectLabel)
                    .add(projectCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.LocationNotePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        locationNoteArea.setColumns(20);
        locationNoteArea.setRows(5);
        locationNoteArea.setLineWrap(true);
        new TabTransfersFocus(locationNoteArea);
        jScrollPane4.setViewportView(locationNoteArea);

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.GPSPanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        altitudeLabel.setText("Altitude:");

        latitudeLabel.setText("Latitude:");

        longitudeLabel.setText("Longitude:");

        convertCoordinatesGroup.add(WGS84Button);
        WGS84Button.setText("WGS84");
        WGS84Button.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        WGS84Button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        WGS84Button.setNextFocusableComponent(S42Button);
        WGS84Button.setActionCommand("WGS84");
        WGS84Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WGS84ButtonActionPerformed(evt);
            }
        });

        convertCoordinatesGroup.add(S42Button);
        S42Button.setText("S-42");
        S42Button.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        S42Button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        S42Button.setNextFocusableComponent(SJTSKButton);
        S42Button.setActionCommand("S42");

        convertCoordinatesGroup.add(SJTSKButton);
        SJTSKButton.setText("S-JTSK");
        SJTSKButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        SJTSKButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SJTSKButton.setNextFocusableComponent(sourceCombo);
        SJTSKButton.setActionCommand("SJTSK");

        altitudeTextField.setNextFocusableComponent(latitudeTextField);

        latitudeTextField.setNextFocusableComponent(longitudeTextField);

        longitudeTextField.setNextFocusableComponent(WGS84Button);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(latitudeLabel)
                    .add(longitudeLabel)
                    .add(altitudeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(latitudeTextField)
                    .add(altitudeTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .add(longitudeTextField))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(S42Button)
                    .add(WGS84Button)
                    .add(SJTSKButton))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {altitudeTextField, latitudeTextField, longitudeTextField}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(WGS84Button)
                    .add(altitudeLabel)
                    .add(altitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(6, 6, 6)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(S42Button)
                    .add(latitudeLabel)
                    .add(latitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(SJTSKButton)
                    .add(longitudeLabel)
                    .add(longitudeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, L10n.getString("AddEdit.OccurrenceNotePanel"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        occurrenceNoteArea.setColumns(20);
        occurrenceNoteArea.setRows(5);
        occurrenceNoteArea.setLineWrap(true);
        new TabTransfersFocus(occurrenceNoteArea);
        jScrollPane5.setViewportView(occurrenceNoteArea);

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
        );

        requiredInfoLabel.setText("requiredInfoLabel");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(requiredInfoLabel))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(requiredInfoLabel)
                        .add(288, 288, 288))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(274, 274, 274))))
        );
        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        cancelButton.setText("Cancel");

        okButton.setText("Ok");

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(helpButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 598, Short.MAX_VALUE)
                .add(okButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancelButton)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(new java.awt.Component[] {cancelButton, helpButton, okButton}, org.jdesktop.layout.GroupLayout.VERTICAL);

        getContentPane().add(jPanel8, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_helpButtonActionPerformed

    private void extendedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extendedButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_extendedButtonActionPerformed

    private void WGS84ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WGS84ButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_WGS84ButtonActionPerformed

    private void extendedButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extendedButtonMouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_extendedButtonMouseClicked
    
    
    //musn't delete contents of tableModel, because it's also called to update the table's user interface unfortunately...
    protected void initAuthorTable() {
        if (tableModel == null) 
            tableModel = new AuthorTableModel(model);
        authorTable.setModel(tableModel);

        //authorTable.setDefaultEditor(JButton.class, new ButtonEditor());
        //authorTable.setDefaultRenderer(JButton.class, new ButtonEditor());

        TableColumn tc1 = authorTable.getColumnModel().getColumn(0);
        TableColumn tc2 = authorTable.getColumnModel().getColumn(1);
        TableColumn tc3 = authorTable.getColumnModel().getColumn(2);
        TableColumn tc4 = authorTable.getColumnModel().getColumn(3);

        JComboBox cb = new AutoComboBoxNG3(model.getAuthors());
        tc1.setCellEditor(new DefaultCellEditor(cb));  
        cb = new AutoComboBoxNG3(model.getAuthorRoles());
        tc2.setCellEditor(new DefaultCellEditor(cb));
        
        ButtonEditor be = new ButtonEditor(model);
        tc3.setCellEditor(be);
        tc3.setCellRenderer(be);
        
        AuthorRevisionEditor are = new AuthorRevisionEditor(model);
        tc4.setCellEditor(are);
    }
    
    private void resetAuthorModel() {
        if (tableModel != null)
            tableModel.reset();
    }
    
    public void loadComponentData()
    {
        switch (model.getCoordinateSystem()) {
            case AddEdit.WGS84:
                WGS84Button.setSelected(true);
                break;
            case AddEdit.S42:
                S42Button.setSelected(true);
                break;
            case AddEdit.SJTSK:
                SJTSKButton.setSelected(true);
                break;
            default:
                WGS84Button.setSelected(true);
        }
        
        resetAuthorModel();
        initAuthorTable();
        
        townComboBox.setSelectedItem(model.getVillage());
        taxonTextArea.setText(model.getTaxon(0));
        descriptionArea.setText(model.getHabitatDescription());
        yearSpinner.setValue(model.getYear());
        
        locationNoteArea.setText(model.getHabitatNote());
        occurrenceNoteArea.setText(model.getOccurrenceNote());
        territoryNameCombo.setSelectedItem(model.getTerritoryName());
        phytNameCombo.setSelectedItem(model.getPhytName());
        phytCodeCombo.setSelectedItem(model.getPhytCode());
        if (model.getPhytCountry() != null) 
            phytCountryCombo.setSelectedItem(model.getPhytCountry());
        else
            phytCountryCombo.setSelectedIndex(0);
        quadrantTextField.setText(model.getQuadrant());
        
        if (model.getAltitude() != null) altitudeTextField.setText(""+model.getAltitude());
        if (model.getLongitude() != null) longitudeTextField.setText(""+model.getLongitude());
        if (model.getLatitude() != null) latitudeTextField.setText(""+model.getLatitude());
        if (model.getSource() != null) 
            sourceCombo.setSelectedItem(model.getSource());
        else
            sourceCombo.setSelectedIndex(0);
        if (model.getPublication() != null)
            publicationCombo.setSelectedItem(model.getPublication());
        else
            publicationCombo.setSelectedIndex(0);
        
        projectCombo.setSelectedItem(model.getProject());
        herbariumTextField.setText(model.getHerbarium());
        
        if (model.getMonth() != null) {
            monthChooser.setMonth(model.getMonth());
            dayChooser.setDay(model.getDay());     
            dayChooser.setMonth(model.getMonth());
        } else
            ((JComboBox)monthChooser.getComboBox()).setSelectedIndex(12);
    }
    
    public void clearComponentData() {
        resetAuthorModel(); initAuthorTable();
        townComboBox.setSelectedIndex(-1);
        taxonTextArea.setText("");
        descriptionArea.setText("");
        yearSpinner.setValue(Calendar.getInstance().get(Calendar.YEAR));
        
        locationNoteArea.setText("");
        occurrenceNoteArea.setText("");
        territoryNameCombo.setSelectedIndex(-1);
        phytNameCombo.setSelectedIndex(-1);
        phytCodeCombo.setSelectedIndex(-1);
        phytCountryCombo.setSelectedIndex(0);
        quadrantTextField.setText("");
        
        altitudeTextField.setText("");
        longitudeTextField.setText("");
        latitudeTextField.setText("");
        sourceCombo.setSelectedIndex(0);
        publicationCombo.setSelectedIndex(0);
        herbariumTextField.setText("");
        
        ((JComboBox)monthChooser.getComboBox()).setSelectedIndex(12);
        dayChooser.setDay(Calendar.getInstance().get(Calendar.DAY_OF_MONTH));
    }
    
    private void setLabels() {
        townLabel.setText(L10n.getString("AddEdit.TownLabel")+REQUIRED_STRING);
        placeDescriptionLabel.setText(L10n.getString("AddEdit.PlaceDescriptionLabel"));
        yearLabel.setText(L10n.getString("AddEdit.YearLabel")+REQUIRED_STRING);
        taxonLabel.setText(L10n.getString("AddEdit.TaxonLabel")+REQUIRED_STRING);
        
        territoryNameLabel.setText(L10n.getString("AddEdit.TerritoryNameLabel")+REQUIRED_STRING);
        phytNameLabel.setText(L10n.getString("AddEdit.PhytNameLabel")+REQUIRED_STRING);
        phytCodeLabel.setText(L10n.getString("AddEdit.PhytCodeLabel")+REQUIRED_STRING);
        quadrantLabel.setText(L10n.getString("AddEdit.QuadrantLabel"));
        countryLabel.setText(L10n.getString("AddEdit.CountryLabel"));
        
        altitudeLabel.setText(L10n.getString("AddEdit.AltitudeLabel"));
        latitudeLabel.setText(L10n.getString("AddEdit.LatitudeLabel"));
        longitudeLabel.setText(L10n.getString("AddEdit.LongitudeLabel"));
        
        sourceLabel.setText(L10n.getString("AddEdit.SourceLabel"));
        publicationLabel.setText(L10n.getString("AddEdit.PublicationLabel"));
        herbariumLabel.setText(L10n.getString("AddEdit.HerbariumLabel"));
        projectLabel.setText(L10n.getString("AddEdit.ProjectLabel")+REQUIRED_STRING);
        
        monthLabel.setText(L10n.getString("AddEdit.MonthLabel"));
        dayLabel.setText(L10n.getString("AddEdit.DayLabel"));
        timeLabel.setText(L10n.getString("AddEdit.TimeLabel"));
        
        helpButton.setText(L10n.getString("Common.Help"));
        helpButton.setMnemonic(L10n.getMnemonic("Common.Help"));
        okButton.setText(L10n.getString("Common.Ok"));
        okButton.setMnemonic(L10n.getMnemonic("Common.Ok"));
        cancelButton.setText(L10n.getString("Common.Cancel"));
        cancelButton.setMnemonic(L10n.getMnemonic("Common.Cancel"));
        
        Object[] arg = {REQUIRED_STRING};
        requiredInfoLabel.setText(L10n.getFormattedString("AddEdit.RequiredInfoLabel",arg));
    }
    
    public void switchExtended() {
        visible = !visible;
        jPanel3.setVisible(visible);
        jPanel2.setPreferredSize(new Dimension(DIALOG_WIDTH,190));
        jPanel8.setPreferredSize(new Dimension(DIALOG_WIDTH,50));
        this.pack();        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEditView(new javax.swing.JFrame(), true, null, false).setVisible(true);
            }
        });
    }

    public void update(Observable o, Object arg) {
        if (arg instanceof Pair) {
            String s = ((Pair<String,Integer>)arg).getFirst();
            int i = ((Pair<String,Integer>)arg).getSecond(); 
            if (s.equals("updateCode"))
                phytCodeCombo.setSelectedItem(model.getPhytCode());
            if (s.equals("updateName"))
                phytNameCombo.setSelectedItem(model.getPhytName());
            if (s.equals("addAuthorRow")) {
                tableModel.addRow();
                /*
                DefaultCellEditor dce = (DefaultCellEditor) authorTable.getCellEditor(0,0);
                Object o = dce.getCellEditorValue();
                 */            
            }             
            if (s.equals("removeAuthorRow")) {
                tableModel.removeRow(i);
                //unfortunately have to set up the editors and renderers again because of the
                //fireTableStructureChanged() in the tableModel.removeRow() ... :-/
                //initAuthorTable();            
            }
        }
        
        if (arg instanceof String) {
            String s = (String)arg;
            if (s.equals("updateDayChooser")) {
                if (model.getMonth() != null)
                    dayChooser.setMonth(model.getMonth());
            }
            if (s.equals("YEAR_CHANGED")) {
                dayChooser.setYear(model.getYear());
                if (model.getMonth() == null)
                    dayChooser.setEnabled(false);
            }
        }
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JRadioButton S42Button;
    protected javax.swing.JRadioButton SJTSKButton;
    protected javax.swing.JRadioButton WGS84Button;
    protected javax.swing.JLabel altitudeLabel;
    protected javax.swing.JTextField altitudeTextField;
    protected javax.swing.JTable authorTable;
    protected javax.swing.JButton cancelButton;
    protected javax.swing.JButton checklistButton;
    private javax.swing.ButtonGroup convertCoordinatesGroup;
    protected javax.swing.JLabel countryLabel;
    protected com.toedter.calendar.JDayChooser dayChooser;
    protected javax.swing.JLabel dayLabel;
    protected javax.swing.JTextArea descriptionArea;
    protected javax.swing.JToggleButton extendedButton;
    protected javax.swing.JButton helpButton;
    protected javax.swing.JLabel herbariumLabel;
    protected javax.swing.JTextField herbariumTextField;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    protected javax.swing.JPanel jPanel4;
    protected javax.swing.JPanel jPanel5;
    protected javax.swing.JPanel jPanel6;
    protected javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    protected javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    protected javax.swing.JLabel latitudeLabel;
    protected javax.swing.JTextField latitudeTextField;
    protected javax.swing.JTextArea locationNoteArea;
    protected javax.swing.JLabel longitudeLabel;
    protected javax.swing.JTextField longitudeTextField;
    protected com.toedter.calendar.JMonthChooser monthChooser;
    protected javax.swing.JLabel monthLabel;
    protected javax.swing.JTextArea occurrenceNoteArea;
    protected javax.swing.JButton okButton;
    protected javax.swing.JComboBox phytCodeCombo;
    protected javax.swing.JLabel phytCodeLabel;
    protected javax.swing.JComboBox phytCountryCombo;
    protected javax.swing.JComboBox phytNameCombo;
    protected javax.swing.JLabel phytNameLabel;
    protected javax.swing.JLabel placeDescriptionLabel;
    protected javax.swing.JComboBox projectCombo;
    protected javax.swing.JLabel projectLabel;
    protected javax.swing.JComboBox publicationCombo;
    protected javax.swing.JLabel publicationLabel;
    protected javax.swing.JLabel quadrantLabel;
    protected javax.swing.JTextField quadrantTextField;
    private javax.swing.JLabel requiredInfoLabel;
    protected javax.swing.JComboBox sourceCombo;
    protected javax.swing.JLabel sourceLabel;
    protected javax.swing.JLabel taxonLabel;
    protected javax.swing.JTextArea taxonTextArea;
    protected javax.swing.JComboBox territoryNameCombo;
    protected javax.swing.JLabel territoryNameLabel;
    private javax.swing.JLabel timeLabel;
    protected javax.swing.JTextField timeTextField;
    protected javax.swing.JComboBox townComboBox;
    protected javax.swing.JLabel townLabel;
    protected javax.swing.JLabel yearLabel;
    protected javax.swing.JSpinner yearSpinner;
    // End of variables declaration//GEN-END:variables
    
}
