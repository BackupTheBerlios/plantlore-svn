package net.sf.plantlore.client.checklist;

import javax.swing.JFileChooser;

import net.sf.plantlore.common.AutoTextArea;
import net.sf.plantlore.l10n.L10n;

/**
 * The dialog displaying the checklist and several buttons 
 * the allow the checklist to be saved or loaded. 
 *
 * @author  Erik Kratochv√≠l
 */
public class ChecklistView extends javax.swing.JDialog {
	
	private AutoTextArea model;
    
    /**
     * @param model	The model is an AutoTextArea - 
     * the selected plants will be appended to the end of the AutoTextArea's contents.
     */
    public ChecklistView(AutoTextArea model) {
    	this.model = model;
        initComponents();
        choice = new JFileChooser();
        setModal(true);
        setLocationRelativeTo(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jToolBar1 = new javax.swing.JToolBar();
        load = new javax.swing.JButton();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        restore = new javax.swing.JButton();
        scrollpane = new javax.swing.JScrollPane();
        checklist = new Checklist( model.getAllowedValues() );
        submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle(L10n.getString("Checklist.Title"));
        
        load.setText("Load");
        jToolBar1.add(load);

        save.setText("Save");
        jToolBar1.add(save);

        clear.setText("Clear");
        jToolBar1.add(clear);

        restore.setText("Restore");
        jToolBar1.add(restore);

        scrollpane.setViewportView(checklist);

        submit.setText("Submit");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .add(submit)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(scrollpane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(scrollpane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(submit)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JList checklist;
    protected javax.swing.JButton clear;
    private javax.swing.JToolBar jToolBar1;
    protected javax.swing.JButton load;
    protected javax.swing.JButton restore;
    protected javax.swing.JButton save;
    protected javax.swing.JScrollPane scrollpane;
    protected javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
    protected JFileChooser choice;

    
}
