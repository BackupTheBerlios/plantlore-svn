/*
 * TransformationChangeView.java
 *
 * Created on 26. srpen 2006, 23:48
 */

package net.sf.plantlore.client.overview;

import java.util.Observable;
import java.util.Observer;
import javax.swing.JDialog;
import net.sf.plantlore.common.PlantloreHelp;
import net.sf.plantlore.l10n.L10n;
import org.apache.log4j.Logger;

/**
 *
 * @author  Lada
 */
public class TransformationChangeView extends javax.swing.JDialog  implements Observer {    
    
    
    /** Model of the AddEdit MVC (AddEdit, TransformatinChangeView, TransformatinChangeCtrl)*/
     private AddEdit model;   
     /** Instance of Logger*/
    private Logger logger;
    
    /**
     * Creates new form TransformationChangeView
     */
    public TransformationChangeView(javax.swing.JDialog parent, AddEdit model, boolean modal) {
        super(parent, modal);
        this.model = model;
        setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        logger = Logger.getLogger(this.getClass().getPackage().getName());  
        initComponents();
        //Init Help
        PlantloreHelp.addKeyHelp(PlantloreHelp.ADD_OCCURRENCE, this.getRootPane());
        PlantloreHelp.addButtonHelp(PlantloreHelp.ADD_OCCURRENCE, this.helpButton);        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        actualSystem = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectedSystem = new javax.swing.JComboBox();
        closeButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(L10n.getString("Overview.Transformation.Panel")));
        jLabel1.setText(L10n.getString("Overview.Transformation.ActualSystem"));

        actualSystem.setText("WGS-8");

        jLabel3.setText(L10n.getString("Overview.Transformation.SelectedSystem"));

        selectedSystem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "WGS-84", "S-JTSK", "S-42" }));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jLabel1))
                .add(23, 23, 23)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(actualSystem)
                    .add(selectedSystem, 0, 127, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(actualSystem))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(selectedSystem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        closeButton.setText("Storno");

        changeButton.setText(L10n.getString("Overview.Transformation.Change"));

        helpButton.setText(L10n.getString("Overview.Transformation.Help"));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(helpButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(changeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(helpButton)
                    .add(changeButton)
                    .add(closeButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void update(Observable o, Object arg) {
    }  
    
  /**
     *  Shows and inicialize actual data or hides this dialog depending on the value of parameter visible. 
     *  @param visible if true, shows this component and initialize actual data; otherwise, hides this component  
     */
    public void setVisible(boolean visible) {
    	if (visible) {          
            switch (model.getCoordinateSystem()) {
                case 0: this.actualSystem.setText("WGS-84");
                        break;
                case 1: this.actualSystem.setText("S-JTSK");
                        break;
                case 2: this.actualSystem.setText("S-42");
                        break;
                default:
                        logger.error("Actual coordinate system is not setting.");                        
            }            
        }    	
    	super.setVisible(visible);        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel actualSystem;
    protected javax.swing.JButton changeButton;
    protected javax.swing.JButton closeButton;
    protected javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    protected javax.swing.JComboBox selectedSystem;
    // End of variables declaration//GEN-END:variables
    
}
