/*
 * ProgressBar.java
 *
 * Created on 28. květen 2006, 23:31
 */

package net.sf.plantlore.common;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;

import org.apache.log4j.Logger;

import net.sf.plantlore.l10n.L10n;


/** ProgressBar dialog that works as an observer of a given Task.
 *
 * The dialog sets itself visible after it receives a STARTING Message, disposes
 * itself after getting a STOPPED Message and in the time between it updates it's
 * state according to POSITION_CHANGED, MESSAGE_CHANGED and LENGHT_CHANGED messages.
 *
 * If constructed with an indeterminate Task works in indeterminate mode until it
 * receives a LENGHT_CHANGED message from the Task. Then it switches to determinate mode.
 *
 * Exceptions trhown by the task are processed by the abstract exceptionHandler() method.
 *
 * @author  Erik Kratochvíl
 */
public abstract class ProgressBarEx extends ProgressBar {
    
    /** Creates a new progress bar, initially invisible. It becomes visible after it receives
     * a STARTING Message from the Task.
     *
     * @param task the task to be monitored
     * @param parent the parent frame of this dialog
     * @modal whether to open in modal mode
     *
     */
    public ProgressBarEx(Task task, java.awt.Frame parent, boolean modal) {
        super(task, parent, modal);
        
    }
    
    public ProgressBarEx(Task task, javax.swing.JDialog parent, boolean modal) {
        super(task, parent, modal);
    }    
 
    @Override
    protected void initialize() {
    	logger = Logger.getLogger(this.getClass().getPackage().getName());
    	
         initComponents();
         
         cancel.setAction(new CancelTaskAction());
         
         if (task.isDeterminate()) {
             progressBar.setIndeterminate(false);
             progressBar.setMinimum(0);
             progressBar.setMaximum(task.getLength());
         } else {
             progressBar.setIndeterminate(true);
         }

         statusField.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
         
         setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
         parent.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
         
         task.addObserver(this);    
    }
 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        statusField = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        setUndecorated(true);
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createEtchedBorder()));
        progressBar.setForeground(java.awt.Color.green);

        statusField.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        statusField.setBorder(null);
        statusField.setDisabledTextColor(javax.swing.UIManager.getDefaults().getColor("Button.foreground"));
        statusField.setEnabled(false);

        cancel.setText(L10n.getString("Common.Cancel"));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, statusField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, cancel)
                    .add(progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(statusField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancel)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private class CancelTaskAction extends AbstractAction {
    	public CancelTaskAction() {
    		putValue(NAME, L10n.getString("Common.Cancel"));
		}
		public void actionPerformed(ActionEvent e) {
			task.kill();
		}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton cancel;
    private javax.swing.JPanel jPanel1;
    //--------------------------------------------------------------
    // Progress bar and Status field are updated by the
    // super class - we must use its variables!
    // (Otherwise they wouldn't be initialized and the
    //  program would crash instantly.)
    //--------------------------------------------------------------
    //private javax.swing.JProgressBar progressBar;
    //private javax.swing.JTextField statusField;
    //--------------------------------------------------------------
    // End of variables declaration//GEN-END:variables
    
}
